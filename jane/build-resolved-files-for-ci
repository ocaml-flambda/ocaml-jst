#!/bin/bash

set -euo pipefail

make -f Makefile.jst _build/_bootinstall

echo "==========="
echo "Testing mlis"
echo "==========="

# ocamlcommon mlis
mlis=$(
  { echo driver/{compenv,compmisc,main_args}.mli
    echo parsing/parser.mli
    echo {utils,typing,parsing,lambda}/*.mli
  } |
    tr ' ' '\n'
)
echo "$mlis"
dune_targets=$(
  for mli in $mlis; do
    cmi=$(basename ${mli%.mli})
    echo _build/default/.ocamlcommon.objs/byte/$cmi.cmi
  done
)

# ocamlbytecomp mlis
mlis=$(
  { echo driver/{errors,compile,maindriver}.mli
  } |
    tr ' ' '\n'
)
echo "$mlis"
dune_targets=$(
  echo $dune_targets
  for mli in $mlis; do
    cmi=$(basename ${mli%.mli})
    echo _build/default/.ocamlbytecomp.objs/byte/$cmi.cmi
  done
)

# ocamloptcomp mlis
mlis=$(
  { echo middle_end/{,closure,flambda}/*.mli
    echo asmcomp/*cmm*.mli
  } |
    tr ' ' '\n'
)
echo "$mlis"
dune_targets=$(
  echo $dune_targets
  for mli in $mlis; do
    cmi=$(basename ${mli%.mli})
    echo _build/default/.ocamloptcomp.objs/byte/$cmi.cmi
  done
)

echo "Dune targets:"
echo "$dune_targets"
dune b --workspace=duneconf/boot.ws $dune_targets

echo "==========="
echo "Testing mls"
echo "==========="

typing_mls=(
  ctype
  datarepr
  includecore
  includemod
  mtype
  oprint
  parmatch
  path
  persistent_env
  predef
  printtyped
  shape
  subst
  tast_iterator
  tast_mapper
  typedecl_variance
  typedtree
  types)

# ocamlcommon mls
mls=$(
  { echo driver/{compenv,compmisc,main_args}.ml
    echo parsing/parser.ml
    echo {utils,parsing,lambda}/*.ml
    for f in "${typing_mls[@]}"; do
        echo "typing/${f}.ml"
    done
  } |
    tr ' ' '\n' |
    grep -v "utils/config.common.ml" |
    grep -v "utils/config.fixed.ml" |
    grep -v "utils/config.generated.ml" |
    grep -v "lambda/matching.ml" | # need Obj.forcing_tag in stdlib
    cat;
)
echo "$mls"
dune_targets=$(
  for ml in $mls; do
    cmx=$(basename ${ml%.ml})
    echo _build/default/.ocamlcommon.objs/native/$cmx.cmx
  done
)

# ocamlbytecomp mls
mls=$(
  { echo driver/{errors,compile,maindriver}.ml
  } |
    tr ' ' '\n'
)
echo "$mls"
dune_targets=$(
  echo $dune_targets
  for ml in $mls; do
    cmx=$(basename ${ml%.ml})
    echo _build/default/.ocamlbytecomp.objs/native/$cmx.cmx
  done
)

# ocamloptcomp mls
mls=$(
  { echo middle_end/{,closure,flambda}/*.ml
    echo asmcomp/*cmm*.ml
  } |
    tr ' ' '\n'
)
echo "$mls"
dune_targets=$(
  echo $dune_targets
  for ml in $mls; do
    cmx=$(basename ${ml%.ml})
    echo _build/default/.ocamloptcomp.objs/native/$cmx.cmx
  done
)

# ocamltest
ocamltest=_build/default/ocamltest/.ocamltest_core_and_plugin.objs/byte
dune_targets="$dune_targets \
  $ocamltest/actions.cmi \
  $ocamltest/actions_helpers.cmi \
  $ocamltest/builtin_actions.cmi \
  $ocamltest/builtin_variables.cmi \
  $ocamltest/empty.cmi \
  $ocamltest/environments.cmi \
  $ocamltest/filecompare.cmi \
  $ocamltest/modifier_parser.cmi \
  $ocamltest/ocaml_actions.cmi \
  $ocamltest/ocaml_backends.cmi \
  $ocamltest/ocaml_commands.cmi \
  $ocamltest/ocaml_compilers.cmi \
  $ocamltest/ocaml_directories.cmi \
  $ocamltest/ocaml_files.cmi \
  $ocamltest/ocaml_filetypes.cmi \
  $ocamltest/ocaml_flags.cmi \
  $ocamltest/ocaml_modifiers.cmi \
  $ocamltest/ocaml_tests.cmi \
  $ocamltest/ocaml_tools.cmi \
  $ocamltest/ocaml_toplevels.cmi \
  $ocamltest/ocaml_variables.cmi \
  $ocamltest/ocamltest_config.cmi \
  $ocamltest/ocamltest_stdlib.cmi \
  $ocamltest/ocamltest_unix.cmi \
  $ocamltest/result.cmi \
  $ocamltest/run_command.cmi \
  $ocamltest/strace.cmi \
  $ocamltest/tests.cmi \
  $ocamltest/tsl_ast.cmi \
  $ocamltest/tsl_semantics.cmi \
  $ocamltest/variables.cmi \
  $ocamltest/actions.cmo \
  $ocamltest/actions_helpers.cmo \
  $ocamltest/builtin_variables.cmo \
  $ocamltest/empty.cmo \
  $ocamltest/environments.cmo \
  $ocamltest/filecompare.cmo \
  $ocamltest/ocaml_actions.cmo \
  $ocamltest/ocaml_backends.cmo \
  $ocamltest/ocaml_commands.cmo \
  $ocamltest/ocaml_compilers.cmo \
  $ocamltest/ocaml_directories.cmo \
  $ocamltest/ocaml_files.cmo \
  $ocamltest/ocaml_filetypes.cmo \
  $ocamltest/ocaml_flags.cmo \
  $ocamltest/ocaml_modifiers.cmo \
  $ocamltest/ocaml_tests.cmo \
  $ocamltest/ocaml_tools.cmo \
  $ocamltest/ocaml_toplevels.cmo \
  $ocamltest/ocaml_variables.cmo \
  $ocamltest/ocamltest_config.cmo \
  $ocamltest/ocamltest_stdlib.cmo \
  $ocamltest/ocamltest_unix.cmo \
  $ocamltest/result.cmo \
  $ocamltest/run_command.cmo \
  $ocamltest/strace.cmo \
  $ocamltest/tests.cmo \
  $ocamltest/tsl_ast.cmo \
  $ocamltest/tsl_semantics.cmo \
  $ocamltest/variables.cmo \
"

echo "Dune targets:"
for target in $dune_targets; do echo $target; done
dune b --workspace=duneconf/boot.ws $dune_targets
